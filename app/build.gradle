plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    //fragment actions and arguments
    id("androidx.navigation.safeargs.kotlin")
    //hilt

    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'

    //parcelize
    id 'kotlin-parcelize'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyPro = new Properties()
apikeyPro.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'co.fanavari.androidfanavari40205'
    compileSdk 34

    defaultConfig {
        applicationId "co.fanavari.androidfanavari40205"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String","UNSPLASH_ACCESS_KEY",apikeyPro["UNSPLASH_ACCESS_KEY"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
        buildConfig true
    }

}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.room:room-common:2.5.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    //navigation component
    def nav_version = "2.7.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //hilt
    implementation "com.google.dagger:hilt-android:2.47"
    kapt "com.google.dagger:hilt-compiler:2.47"

    //retrofit
    def retrofitVersion = '2.9.0'
    def paging_version = '3.2.0'
    implementation ("com.squareup.retrofit2:retrofit:$retrofitVersion")
    implementation ("com.squareup.retrofit2:converter-gson:$retrofitVersion")

    //paging 3
    implementation("androidx.paging:paging-runtime-ktx:$paging_version")

    //glide
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'

    //room
    def room_version = "2.5.2"

    //implementation("androidx.room:room-runtime:$room_version")
//    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    kapt ("androidx.room:room-compiler:$room_version")


    // optional - Paging 3 Integration
    implementation("androidx.room:room-paging:$room_version")
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4"

    // Lifecycle + ViewModel & LiveData
    def lifecycleVersion = '2.6.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
//    implementation "android.arch.lifecycle:common-java8:2.4.0"
    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion")
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion")

    //data store
    def dataStoreVersion = '1.0.0'
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"
}

//hilt
kapt {
    correctErrorTypes true
}